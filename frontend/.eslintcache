[{"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\index.js":"1","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\App.js":"2","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Navbar\\index.js":"3","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\LogIn\\index.js":"4","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Home\\index.js":"5","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Index\\index.js":"6","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Modules\\index.js":"7","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Navbar\\style.js":"8","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Home\\style.js":"9","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Modules\\style.js":"10","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\actions\\auth.js":"11","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\actions\\types.js":"12","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\store.js":"13","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\hocs\\Layout.js":"14","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\reducers\\index.js":"15","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\reducers\\auth.js":"16","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Signup\\index.js":"17","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\ResetPassword\\index.js":"18","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\ResetPasswordConfirm\\index.js":"19","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Activate\\index.js":"20","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\ImageUpload\\index.js":"21","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Logout\\index.js":"22","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\ContentFeed\\contet-feed.js":"23","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\UploadImage\\index.js":"24"},{"size":222,"mtime":1616010269444,"results":"25","hashOfConfig":"26"},{"size":1678,"mtime":1619691303885,"results":"27","hashOfConfig":"26"},{"size":2883,"mtime":1616114394734,"results":"28","hashOfConfig":"26"},{"size":2883,"mtime":1616626912081,"results":"29","hashOfConfig":"26"},{"size":1182,"mtime":1617104536353,"results":"30","hashOfConfig":"26"},{"size":293,"mtime":1608102205692,"results":"31","hashOfConfig":"26"},{"size":1375,"mtime":1616917930554,"results":"32","hashOfConfig":"26"},{"size":950,"mtime":1616114291128,"results":"33","hashOfConfig":"26"},{"size":1207,"mtime":1617106408461,"results":"34","hashOfConfig":"26"},{"size":1388,"mtime":1616917891936,"results":"35","hashOfConfig":"26"},{"size":7065,"mtime":1616600873331,"results":"36","hashOfConfig":"26"},{"size":832,"mtime":1616189482427,"results":"37","hashOfConfig":"26"},{"size":412,"mtime":1615639046442,"results":"38","hashOfConfig":"26"},{"size":583,"mtime":1617102403085,"results":"39","hashOfConfig":"26"},{"size":119,"mtime":1615662708631,"results":"40","hashOfConfig":"26"},{"size":3817,"mtime":1616919507616,"results":"41","hashOfConfig":"26"},{"size":4622,"mtime":1616627458804,"results":"42","hashOfConfig":"26"},{"size":2226,"mtime":1616626000147,"results":"43","hashOfConfig":"26"},{"size":2768,"mtime":1616326406189,"results":"44","hashOfConfig":"26"},{"size":1178,"mtime":1616193701085,"results":"45","hashOfConfig":"26"},{"size":898,"mtime":1616918208477,"results":"46","hashOfConfig":"26"},{"size":871,"mtime":1618604731116,"results":"47","hashOfConfig":"26"},{"size":10632,"mtime":1619853016990,"results":"48","hashOfConfig":"26"},{"size":3830,"mtime":1619911519341,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1xqvile",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\index.js",[],["110","111"],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\App.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Navbar\\index.js",["112","113"],"import React , {Fragment}  from 'react' ;\r\nimport {NavbarSection , Logo , LogoText , ListItem , UlList , Span ,StyledLink} from './style.js';\r\nimport {connect} from 'react-redux' ;\r\nimport { logout } from '../../actions/auth' ;\r\nimport {Link} from 'react-router-dom' ;\r\n\r\nconst Navbar = ({logout , isAuthenticated}) =>  {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <ListItem>\r\n        <li className='nav-item active '>\r\n            <Link className='nav-link' to='/login'>Login <span className='sr-only'>(current)</span></Link>\r\n        </li>\r\n        </ListItem>\r\n        <ListItem>\r\n        <li className='nav-item active'>\r\n            <Link className='nav-link' to='/signup'>Sign Up<span className='sr-only'>(current)</span></Link>\r\n        </li>\r\n        </ListItem>\r\n    </Fragment>\r\n       \r\n    );\r\n\r\n    const authLinks = () => (\r\n        <ListItem>\r\n        <li className='nav-item active'>\r\n        <Link className='nav-link' to='#!' onClick={logout}>Logout<span className='sr-only'>(current)</span></Link>\r\n    </li>  \r\n    </ListItem>\r\n    );\r\n  \r\n   \r\nreturn(\r\n// {/* <Fragment> */}\r\n    <NavbarSection>\r\n         <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n            \r\n               <Logo><Link className='navbar-brand'to='/'> <LogoText> Image<Span>Pro</Span> </LogoText> </Link>   </Logo> \r\n                <button \r\n                    className='navbar-toggler' \r\n                    type='button' \r\n                    data-toggle='collapse' \r\n                    data-target='#navbarNav' \r\n                    aria-controls='navbarNav' \r\n                    aria-expanded='false' \r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse ' id='navbarResponsive'>\r\n                    \r\n                    <ul className='navbar-nav ml-auto'>\r\n                      <ListItem>  <li className='nav-item active'>\r\n                            <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\r\n                        </li>\r\n                        </ListItem>\r\n                       <ListItem> <li className='nav-item active'>\r\n                            <Link className='nav-link' to='/modules'>Modules <span className='sr-only'>(current)</span></Link>\r\n                        </li>\r\n                        </ListItem>\r\n                        {isAuthenticated ? authLinks() : guestLinks()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            </NavbarSection>\r\n            // {/* // </Fragment> */}\r\n           \r\n\r\n);\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps , {logout}) (Navbar);","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\LogIn\\index.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Home\\index.js",["114","115","116","117"],"import React  from 'react' ;\r\nimport {BrowserRouter , Route} from 'react-router-dom' ;\r\nimport Navbar from '../Navbar';\r\nimport LogIn from './../LogIn' ;\r\nimport {connect} from 'react-redux' ;\r\n\r\nimport {HomeSection , HomeBtn , HomeDesc , HomeInformation , HomeTitle , Span} from './style.js' ;\r\n\r\nconst Home = ({isAuthenticated}) =>  {\r\n    // const logIn = () => {\r\n    //     <BrowserRouter>\r\n    //     <Navbar/>\r\n    //     <Route path=\"/login\" component={LogIn} />\r\n    //     </BrowserRouter>\r\n\r\n    // }\r\n    return (\r\n      <HomeSection>\r\n      <div className=\"page_conatiner\">\r\n          <HomeInformation>\r\n              <HomeTitle>Image Processing</HomeTitle>\r\n              <HomeDesc>\r\n                  <Span>ImagePro</Span> is a website for process Images with many modules\r\n              </HomeDesc>\r\n              {/* <HomeBtn to=\"/login\">Let's Begin</HomeBtn> */}\r\n              {isAuthenticated ? '' : <HomeBtn to=\"/login\">Try it</HomeBtn>}\r\n          </HomeInformation>\r\n      </div>\r\n  </HomeSection>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps , null) (Home);","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Index\\index.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Modules\\index.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Navbar\\style.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Home\\style.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Modules\\style.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\actions\\auth.js",["118"],"import axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\n// export const signup = (name, email, password, re_password) => async dispatch => {\r\n//     const config = {\r\n//         headers: {\r\n//             'Content-Type': 'application/json'\r\n//         }\r\n//     };\r\n\r\n//     const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n\r\n\r\n//     // try {\r\n//     //     const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n//     //     dispatch({\r\n//     //         type: SIGNUP_SUCCESS,\r\n//     //         payload: res.data\r\n//     //     });\r\n//     //     alert('Your account has been done , Go to your email to verify it');\r\n//     //     if (password === re_password) {\r\n//     //         return <Redirect to='/login' />\r\n//     //     }\r\n//     //     else {\r\n//     //         if (password != re_password) {\r\n//     //             alert('The two password fields did not match');\r\n//     //         }\r\n//     //     }\r\n\r\n//     // } catch (err) {\r\n//     //     dispatch({\r\n//     //         type: SIGNUP_FAIL,\r\n//     //     });\r\n//     //     alert('This email already exists');\r\n//     // }\r\n\r\n//     try {\r\n//         const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n//          if(res.status === 201){\r\n//             dispatch({\r\n//                 type: SIGNUP_SUCCESS,\r\n//                 payload: res.data\r\n//             });\r\n//             // alert('Your account has been done , Go to your email to verify it');\r\n//         }\r\n//         // else{\r\n//         //         dispatch({\r\n//         //             type: SIGNUP_FAIL,\r\n//         //         });\r\n//         //         // alert('This email already exists');\r\n//         // }\r\n//     } catch (err) {\r\n//         dispatch({\r\n//             type: SIGNUP_FAIL,\r\n//         });\r\n//         // alert('This email already exists');\r\n//     }\r\n// };\r\n\r\nexport const signup = (name,  email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name,  email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n        \r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL,\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\actions\\types.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\store.js",["119"],"import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\hocs\\Layout.js",["120"],"import React , {useEffect}   from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport {connect} from \"react-redux\" ;\r\nimport {checkAuthenticated , load_user , logout} from '../actions/auth' ;\r\n\r\nconst Layout = ({ checkAuthenticated, load_user, logout ,  children }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n        logout();\r\n    }, []) ;\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default connect(null , {checkAuthenticated , load_user , logout}) (Layout);","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\reducers\\index.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\reducers\\auth.js",["121","122"],"import { Redirect } from 'react-router';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null,\r\n    isSignup: null,\r\n    isEmailSignup: null,\r\n    isEmailActivated: null,\r\n    isLogin: null,\r\n    isLogout: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh,\r\n                isLogin: true\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                isEmailSignup: true,\r\n                isSignup: true\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                isLogin: false\r\n            }\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                isLogout: true\r\n            }\r\n        case SIGNUP_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                isSignup: false,\r\n                isEmailSignup: false\r\n            }\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isEmailActivated: true\r\n            }\r\n        case PASSWORD_RESET_FAIL:\r\n            return {\r\n                ...state,\r\n                isEmailActivated: false\r\n            }\r\n        case ACTIVATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                // isEmailActivated: true\r\n            }\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state,\r\n                // isEmailActivated: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Signup\\index.js",["123","124","125"],"import React, { useState , useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../../actions/auth';\r\n\r\n\r\nconst Signup = ({ signup, isAuthenticated, isEmailSignup , isSignup }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n            if(isEmailSignup === null) {\r\n                return ;\r\n            }\r\n            if(isEmailSignup){\r\n                alert('Your account has successfully done , Go to your email to verify it');\r\n            }\r\n            else{\r\n                alert('This email already exists');\r\n            }\r\n        }\r\n        , [isEmailSignup] \r\n      )\r\n\r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password !== 'undefined' && re_password !== 'undefined') {\r\n            if (password == re_password) {\r\n                signup(name, email, password, re_password);\r\n            }\r\n            else {\r\n                if (password !== re_password) {\r\n                    alert('The two password fields did not match');\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    // if (isAuthenticated) {\r\n    //     return <Redirect to='/' />\r\n    // }\r\n    if(isSignup) {\r\n        return <Redirect to = '/login' /> ;\r\n    }\r\n\r\n    // if (accountCreated) {\r\n    //      setAccountCreated(false);\r\n    //      return <Redirect to='/login' /> ;\r\n    // }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                {/* <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='First Name*'\r\n                        name='first_name'\r\n                        value={first_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div> */}\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Name*'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password*'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isEmailSignup: state.auth.isEmailSignup ,\r\n    isSignup: state.auth.isSignup \r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\ResetPassword\\index.js",["126","127"],"import React, { useState , useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../../actions/auth';\r\n\r\nconst ResetPassword = ({ reset_password , isEmailActivated }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n            if(isEmailActivated === null) {\r\n                return ;\r\n            }\r\n            if(isEmailActivated){\r\n                alert('Request sent to your e-mail');\r\n            }\r\n            else{\r\n                alert('Please make sure you have entered the correct e-mail .. note: if your email is not activated yet , go to your email to verify it first');\r\n            }\r\n        }\r\n        , [isEmailActivated] \r\n      )\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (email !== 'undefined') {\r\n            reset_password(email);\r\n        }\r\n       // setRequestSent(true);\r\n    };\r\n\r\n    // if (requestSent) {\r\n    //     return <Redirect to='/' />\r\n    // }\r\n\r\n    if (isEmailActivated){\r\n        return <Redirect to = '/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset:</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isEmailActivated: state.auth.isEmailActivated\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { reset_password })(ResetPassword);","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\ResetPasswordConfirm\\index.js",["128","129","130","131"],"import React, { useState } from 'react';\r\nimport { Redirect, Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../../actions/auth';\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n       \r\n        \r\n            if (new_password !== 'undefined' && re_new_password !== 'undefined') {\r\n                if (new_password == re_new_password) {\r\n                    reset_password_confirm(uid, token, new_password, re_new_password);\r\n                    setRequestSent(true);\r\n                }\r\n                else {\r\n                    if (new_password != re_new_password) {\r\n                        alert('Those paswords dont match');\r\n                        \r\n                    }\r\n                }\r\n    \r\n            }\r\n        \r\n    };\r\n\r\n    if (requestSent) {\r\n        alert('Password has been successfully changed');\r\n        \r\n        return <Redirect to='/' /> \r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (connect(null, { reset_password_confirm })(ResetPasswordConfirm));","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Activate\\index.js",[],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\ImageUpload\\index.js",["132"],"import React, { Component } from 'react';\r\n\r\nimport './style.css'\r\n\r\nclass ImageUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: null\r\n    };\r\n\r\n    this.onImageChange = this.onImageChange.bind(this);\r\n  }\r\n\r\n  onImageChange = event => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      let img = event.target.files[0];\r\n      this.setState({\r\n        image: URL.createObjectURL(img)\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <img id='image' src={this.state.image} />\r\n            <label for=\"fileUpload\" className=\"label\">Upload Image</label>\r\n            <input type=\"file\" className='input' id=\"fileUpload\" name=\"myImage\" onChange={this.onImageChange} ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ImageUpload;\r\n","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\Logout\\index.js",["133","134"],"import React, { useEffect } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/auth';\r\n\r\n\r\nconst Logout = ({ isLogout, logout, isAuthenticated }) => {\r\n\r\n    // useEffect(\r\n    //     () => {\r\n    //         if(isLogout === null) {\r\n    //             return ;\r\n    //         }\r\n    //         if(isLogout){\r\n    //             return <Redirect to='/' /> ;\r\n    //         }\r\n    //     \r\n    //     , [isLogout] \r\n    //   )\r\n\r\n   \r\n\r\n    if (isLogout) {\r\n        <Route exact path=\"/\" ></Route>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isLogout: state.auth.isLogout,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Logout);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\ContentFeed\\contet-feed.js",["135"],"E:\\React\\Applications\\imagepro - Copy\\frontend\\src\\components\\UploadImage\\index.js",["136","137","138","139","140","141","142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":2,"column":54,"nodeType":"150","messageId":"151","endLine":2,"endColumn":60},{"ruleId":"148","severity":1,"message":"152","line":2,"column":69,"nodeType":"150","messageId":"151","endLine":2,"endColumn":79},{"ruleId":"148","severity":1,"message":"153","line":2,"column":9,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"148","severity":1,"message":"154","line":2,"column":25,"nodeType":"150","messageId":"151","endLine":2,"endColumn":30},{"ruleId":"148","severity":1,"message":"155","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"156","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":13},{"ruleId":"148","severity":1,"message":"157","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"158","line":1,"column":40,"nodeType":"150","messageId":"151","endLine":1,"endColumn":47},{"ruleId":"159","severity":1,"message":"160","line":11,"column":8,"nodeType":"161","endLine":11,"endColumn":10,"suggestions":"162"},{"ruleId":"148","severity":1,"message":"157","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":32,"column":1,"nodeType":"165","endLine":135,"endColumn":2},{"ruleId":"148","severity":1,"message":"166","line":8,"column":12,"nodeType":"150","messageId":"151","endLine":8,"endColumn":26},{"ruleId":"148","severity":1,"message":"167","line":8,"column":28,"nodeType":"150","messageId":"151","endLine":8,"endColumn":45},{"ruleId":"168","severity":1,"message":"169","line":39,"column":26,"nodeType":"170","messageId":"171","endLine":39,"endColumn":28},{"ruleId":"148","severity":1,"message":"172","line":7,"column":12,"nodeType":"150","messageId":"151","endLine":7,"endColumn":23},{"ruleId":"148","severity":1,"message":"173","line":7,"column":25,"nodeType":"150","messageId":"151","endLine":7,"endColumn":39},{"ruleId":"148","severity":1,"message":"154","line":2,"column":20,"nodeType":"150","messageId":"151","endLine":2,"endColumn":25},{"ruleId":"148","severity":1,"message":"174","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":26,"column":34,"nodeType":"170","messageId":"171","endLine":26,"endColumn":36},{"ruleId":"168","severity":1,"message":"175","line":31,"column":38,"nodeType":"170","messageId":"171","endLine":31,"endColumn":40},{"ruleId":"176","severity":1,"message":"177","line":29,"column":13,"nodeType":"178","endLine":29,"endColumn":54},{"ruleId":"148","severity":1,"message":"179","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"157","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":333,"column":13,"nodeType":"178","endLine":333,"endColumn":60},{"ruleId":"148","severity":1,"message":"180","line":5,"column":5,"nodeType":"150","messageId":"151","endLine":5,"endColumn":8},{"ruleId":"148","severity":1,"message":"181","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":13},{"ruleId":"148","severity":1,"message":"182","line":5,"column":15,"nodeType":"150","messageId":"151","endLine":5,"endColumn":19},{"ruleId":"148","severity":1,"message":"183","line":5,"column":21,"nodeType":"150","messageId":"151","endLine":5,"endColumn":29},{"ruleId":"148","severity":1,"message":"184","line":5,"column":31,"nodeType":"150","messageId":"151","endLine":5,"endColumn":40},{"ruleId":"148","severity":1,"message":"185","line":5,"column":42,"nodeType":"150","messageId":"151","endLine":5,"endColumn":50},{"ruleId":"148","severity":1,"message":"186","line":5,"column":52,"nodeType":"150","messageId":"151","endLine":5,"endColumn":59},{"ruleId":"176","severity":1,"message":"177","line":133,"column":21,"nodeType":"178","endLine":133,"endColumn":67},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'UlList' is defined but never used.","Identifier","unusedVar","'StyledLink' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Navbar' is defined but never used.","'LogIn' is defined but never used.","'Redirect' is defined but never used.","'compose' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated', 'load_user', and 'logout'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["189"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'accountCreated' is assigned a value but never used.","'setAccountCreated' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'requestSent' is assigned a value but never used.","'setRequestSent' is assigned a value but never used.","'withRouter' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'CardImg' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},"Update the dependencies array to be: [checkAuthenticated, load_user, logout]",{"range":"192","text":"193"},[383,385],"[checkAuthenticated, load_user, logout]"]